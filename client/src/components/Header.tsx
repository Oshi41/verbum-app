import React, {FC, useState} from 'react';
import styled from "styled-components";
import {Container, SignUpButton} from "../styles/UILibrary";
import {useNavigate} from "react-router-dom";
import Logo from "./Logo";
import NavModal from "./NavModal";
import {HeaderProps} from "../types/IProps";
import {useAppDispatch, useAppSelector} from "../hooks/redux";
import {authSlice} from "../store/reducers/AuthSlice";
import {DarkModeButtonProps} from "../types/IProps";

const HeaderBlock = styled.header`
  margin-bottom: 10px;
`;
const HeaderGroup = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 55px;
  background-color: ${(props) => props.theme.main};
  border-bottom: 1px solid ${(props) => props.theme.border};
`;
const ProfileImage = styled.img`
  display: block;
  width: 35px;
  height: 35px;
  border-radius: 100%;
  object-fit: cover;
  cursor: pointer;
`;
const LinksWrapper = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
`;
const DarkModeButton = styled.div<DarkModeButtonProps>`
  border: none;
  width: 30px;
  height: 30px;
  cursor: pointer;
  border-radius: 50%;
  align-items: center;
  margin-right: 10px;
  svg {
    padding: 4px;
  }
  @media (max-width: 575px) {
    margin-right: 5px;
  }
  &:hover {
    background-color: ${(props) => props.theme.border};
  }
`;
const LogInButton = styled.button`
  color: ${(props) => props.theme.text};
  background-color: ${(props) => props.theme.main};
  text-decoration: none;
  font-size: 16px;
  border: none;
  font-weight: bold;
  border-radius: 5px;
  width: 100px;
  padding: 4%;
  cursor: pointer;
  transition: .2s;
  margin-right: 10px;
  @media (max-width: 575px) {
    width: 60px;
    font-size: 12px;
  }
  &:hover{
    background-color: ${(props) => props.theme.border};
  }
`;

const Header: FC<HeaderProps> = ({isAuth}) => {
    const isDarkMode = useAppSelector(state => state.auth.isDarkMode);
    const dispatch = useAppDispatch();
    const [modalActive, setModalActive] = useState<boolean>(false);
    const navigate = useNavigate();
    const avatar = '';
    const name = 'Daniil'

    const showModal = () => {
        document.body.style.paddingRight = `${window.innerWidth - document.body.clientWidth}px`;
        document.body.style.overflow = 'hidden';
        setModalActive(true);
    };
    const navigateUser = (path: string) => {
        navigate(path);
        window.location.reload();
    }

    return (
        <HeaderBlock>
            <Container>
                <HeaderGroup>
                    <div onClick={() => navigate('/')}>
                        <Logo/>
                    </div>
                    {
                        isAuth ?
                        <>
                            <div>
                                <ProfileImage
                                    src={avatar}
                                    onClick={showModal}
                                />
                            </div>
                            <NavModal
                                active={modalActive}
                                setActive={setModalActive}
                                avatar={avatar}
                                name={name}
                            />
                        </>
                        :
                        <LinksWrapper>
                            <DarkModeButton onClick={() => dispatch(authSlice.actions.toggleDarkMode())}>
                                {
                                    isDarkMode ?
                                    <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M28.0834 16.8292C27.0505 17.1034 25.9863 17.2422 24.9176 17.2421C21.6633 17.2421 18.6072 15.9774 16.3117 13.6828C14.8043 12.1672 13.7206 10.2832 13.1686 8.21849C12.6166 6.15378 12.6156 3.98051 13.1657 1.9153C13.2344 1.65708 13.2339 1.38535 13.1644 1.12735C13.0949 0.869359 12.9587 0.634177 12.7695 0.445399C12.5804 0.25662 12.3449 0.120883 12.0867 0.0518037C11.8285 -0.0172754 11.5567 -0.0172678 11.2985 0.0518259C8.71206 0.740813 6.35238 2.09757 4.45613 3.98599C-1.48538 9.92533 -1.48538 19.5931 4.45613 25.5355C5.86838 26.9551 7.54826 28.0807 9.39855 28.847C11.2488 29.6133 13.2328 30.0052 15.2356 29.9999C17.2378 30.0056 19.2213 29.614 21.0711 28.8479C22.9209 28.0819 24.6003 26.9565 26.012 25.5371C27.9025 23.6411 29.2604 21.2811 29.9491 18.6942C30.0175 18.4361 30.017 18.1645 29.9475 17.9067C29.878 17.6489 29.742 17.4138 29.5531 17.225C29.3642 17.0362 29.1291 16.9003 28.8712 16.8308C28.6133 16.7613 28.3416 16.7608 28.0834 16.8292V16.8292ZM23.8582 23.3826C22.7287 24.5179 21.3852 25.4179 19.9054 26.0307C18.4256 26.6435 16.8389 26.9568 15.2371 26.9526C13.6348 26.9565 12.0476 26.6429 10.5673 26.0299C9.08702 25.4169 7.74298 24.5166 6.61293 23.381C1.86034 18.6286 1.86034 10.8944 6.61293 6.14201C7.5313 5.22501 8.59155 4.46201 9.75287 3.88238C9.58288 6.07506 9.88846 8.27858 10.6487 10.3423C11.409 12.4061 12.606 14.2815 14.1579 15.8403C15.7139 17.3966 17.5894 18.5964 19.6548 19.357C21.7202 20.1176 23.9261 20.4206 26.1202 20.2453C25.5372 21.4042 24.7737 22.4632 23.8582 23.3826V23.3826Z" fill="#C5A45B"/>
                                    </svg>
                                    :
                                    <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M15 19.5C16.1935 19.5 17.3381 19.0259 18.182 18.182C19.0259 17.3381 19.5 16.1935 19.5 15C19.5 13.8065 19.0259 12.6619 18.182 11.818C17.3381 10.9741 16.1935 10.5 15 10.5C13.8065 10.5 12.6619 10.9741 11.818 11.818C10.9741 12.6619 10.5 13.8065 10.5 15C10.5 16.1935 10.9741 17.3381 11.818 18.182C12.6619 19.0259 13.8065 19.5 15 19.5V19.5ZM15 22.5C13.0109 22.5 11.1032 21.7098 9.6967 20.3033C8.29018 18.8968 7.5 16.9891 7.5 15C7.5 13.0109 8.29018 11.1032 9.6967 9.6967C11.1032 8.29018 13.0109 7.5 15 7.5C16.9891 7.5 18.8968 8.29018 20.3033 9.6967C21.7098 11.1032 22.5 13.0109 22.5 15C22.5 16.9891 21.7098 18.8968 20.3033 20.3033C18.8968 21.7098 16.9891 22.5 15 22.5ZM15 0C15.3978 0 15.7794 0.158035 16.0607 0.43934C16.342 0.720644 16.5 1.10218 16.5 1.5V4.5C16.5 4.89782 16.342 5.27936 16.0607 5.56066C15.7794 5.84196 15.3978 6 15 6C14.6022 6 14.2206 5.84196 13.9393 5.56066C13.658 5.27936 13.5 4.89782 13.5 4.5V1.5C13.5 1.10218 13.658 0.720644 13.9393 0.43934C14.2206 0.158035 14.6022 0 15 0V0ZM15 24C15.3978 24 15.7794 24.158 16.0607 24.4393C16.342 24.7206 16.5 25.1022 16.5 25.5V28.5C16.5 28.8978 16.342 29.2794 16.0607 29.5607C15.7794 29.842 15.3978 30 15 30C14.6022 30 14.2206 29.842 13.9393 29.5607C13.658 29.2794 13.5 28.8978 13.5 28.5V25.5C13.5 25.1022 13.658 24.7206 13.9393 24.4393C14.2206 24.158 14.6022 24 15 24V24ZM1.5 13.5H4.5C4.89782 13.5 5.27936 13.658 5.56066 13.9393C5.84196 14.2206 6 14.6022 6 15C6 15.3978 5.84196 15.7794 5.56066 16.0607C5.27936 16.342 4.89782 16.5 4.5 16.5H1.5C1.10218 16.5 0.720644 16.342 0.43934 16.0607C0.158035 15.7794 0 15.3978 0 15C0 14.6022 0.158035 14.2206 0.43934 13.9393C0.720644 13.658 1.10218 13.5 1.5 13.5V13.5ZM25.5 13.5H28.5C28.8978 13.5 29.2794 13.658 29.5607 13.9393C29.842 14.2206 30 14.6022 30 15C30 15.3978 29.842 15.7794 29.5607 16.0607C29.2794 16.342 28.8978 16.5 28.5 16.5H25.5C25.1022 16.5 24.7206 16.342 24.4393 16.0607C24.158 15.7794 24 15.3978 24 15C24 14.6022 24.158 14.2206 24.4393 13.9393C24.7206 13.658 25.1022 13.5 25.5 13.5ZM25.6065 4.3935C25.8877 4.67479 26.0457 5.05625 26.0457 5.454C26.0457 5.85175 25.8877 6.23321 25.6065 6.5145L23.4855 8.6355C23.3471 8.77877 23.1816 8.89304 22.9986 8.97165C22.8156 9.05027 22.6188 9.09165 22.4196 9.09338C22.2204 9.09511 22.0229 9.05715 21.8386 8.98173C21.6542 8.90631 21.4867 8.79493 21.3459 8.65409C21.2051 8.51325 21.0937 8.34578 21.0183 8.16143C20.9428 7.97709 20.9049 7.77957 20.9066 7.5804C20.9084 7.38123 20.9497 7.1844 21.0283 7.00139C21.107 6.81839 21.2212 6.65287 21.3645 6.5145L23.4855 4.3935C23.7668 4.11229 24.1483 3.95432 24.546 3.95432C24.9437 3.95432 25.3252 4.11229 25.6065 4.3935ZM8.6355 21.3645C8.91671 21.6458 9.07468 22.0273 9.07468 22.425C9.07468 22.8227 8.91671 23.2042 8.6355 23.4855L6.5145 25.605C6.37613 25.7483 6.21061 25.8625 6.02761 25.9412C5.8446 26.0198 5.64777 26.0611 5.4486 26.0629C5.24943 26.0646 5.05191 26.0267 4.86757 25.9512C4.68322 25.8758 4.51575 25.7644 4.37491 25.6236C4.23407 25.4828 4.12269 25.3153 4.04727 25.1309C3.97185 24.9466 3.93389 24.7491 3.93562 24.5499C3.93735 24.3507 3.97873 24.1539 4.05735 23.9709C4.13596 23.7879 4.25023 23.6224 4.3935 23.484L6.5145 21.363C6.79579 21.0818 7.17725 20.9238 7.575 20.9238C7.97275 20.9238 8.35421 21.0818 8.6355 21.363V21.3645ZM6.5145 4.3935L8.6355 6.5145C8.90874 6.7974 9.05993 7.17631 9.05651 7.5696C9.05309 7.9629 8.89534 8.33912 8.61723 8.61723C8.33912 8.89534 7.9629 9.05309 7.5696 9.05651C7.17631 9.05993 6.7974 8.90874 6.5145 8.6355L4.395 6.5145C4.13287 6.2297 3.99099 5.8546 3.999 5.46761C4.00702 5.08063 4.16432 4.71172 4.43802 4.43802C4.71172 4.16432 5.08063 4.00702 5.46761 3.999C5.8546 3.99099 6.2297 4.13287 6.5145 4.395V4.3935ZM23.4855 21.3645L25.6065 23.4855C25.8797 23.7684 26.0309 24.1473 26.0275 24.5406C26.0241 24.9339 25.8663 25.3101 25.5882 25.5882C25.3101 25.8663 24.9339 26.0241 24.5406 26.0275C24.1473 26.0309 23.7684 25.8797 23.4855 25.6065L21.3645 23.4855C21.2212 23.3471 21.107 23.1816 21.0283 22.9986C20.9497 22.8156 20.9084 22.6188 20.9066 22.4196C20.9049 22.2204 20.9428 22.0229 21.0183 21.8386C21.0937 21.6542 21.2051 21.4867 21.3459 21.3459C21.4867 21.2051 21.6542 21.0937 21.8386 21.0183C22.0229 20.9428 22.2204 20.9049 22.4196 20.9066C22.6188 20.9084 22.8156 20.9497 22.9986 21.0283C23.1816 21.107 23.3471 21.2212 23.4855 21.3645V21.3645Z" fill="#C5A45B"/>
                                    </svg>
                                }
                            </DarkModeButton>
                            <LogInButton onClick={() => navigateUser('/login')}>Log in</LogInButton>
                            <SignUpButton onClick={() => navigateUser('/signup')}>Sign up</SignUpButton>
                        </LinksWrapper>
                    }
                </HeaderGroup>
            </Container>
        </HeaderBlock>
    );
};

export default Header;
